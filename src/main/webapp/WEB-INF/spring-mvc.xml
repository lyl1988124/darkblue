<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- redis 缓存加载配置文件 此配置需要在memcached前加载，否则不识别redis的properties文件 原因不明-->
    <import resource="classpath:redis/spring-redis.xml"/>

    <!-- memcahed 缓存加载配置文件-->
    <import resource="classpath:memcached/spring-memcahed.xml"/>

    <!-- 启用注解 -->                    
    <mvc:annotation-driven>
   		<!-- 消息转换器 @ResponseBody 返回中文转码 -->
    	<mvc:message-converters register-defaults="true">
      		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
        		<property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
      		</bean>
    	</mvc:message-converters>
    </mvc:annotation-driven>
	<!-- 加载service -->
    <context:component-scan base-package="com.lyl.local.service" use-default-filters="false">  
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
    
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.lyl.local.web.controller">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/views/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>
    <!-- web.xml拦截器“/”拦截了所有资源，配置可以访问的静态资源 <mvc:default-servlet-handler/> 和  <mvc:resources 二选一即可-->
    <!-- <mvc:default-servlet-handler/>  -->
    <mvc:resources location="/" mapping="/**/*.html"/>
    <!-- SpringMVC设置不经过Controller,直接重定向到指定的页面 -->
    <mvc:view-controller path="/" view-name="redirect:index.html"/>
</beans>  